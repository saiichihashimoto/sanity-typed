# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: "Checks"
on: pull_request

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v3.8.1
        with:
          node-version-file: "package.json"
          cache: "npm"
      - run: npm ci

      - run: |
          RESULT=$(npx turbo run build --dry=json | jq --raw-output ".tasks[] | select(.taskId | contains(\"@sanity-typed/test-utils#build\")) | .hash")
          echo "HASH_TEST_UTILS=$RESULT" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo/${{ env.HASH_TEST_UTILS }}*
          key: turbo-cache-${{ env.HASH_TEST_UTILS }}

      - run: |
          RESULT=$(npx turbo run build --dry=json | jq --raw-output ".tasks[] | select(.taskId | contains(\"@sanity-typed/types#build\")) | .hash")
          echo "HASH_TYPES=$RESULT" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo/${{ env.HASH_TYPES }}*
          key: turbo-cache-${{ env.HASH_TYPES }}

      - run: |
          RESULT=$(npx turbo run build --dry=json | jq --raw-output ".tasks[] | select(.taskId | contains(\"@sanity-typed/groq#build\")) | .hash")
          echo "HASH_GROQ=$RESULT" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo/${{ env.HASH_GROQ }}*
          key: turbo-cache-${{ env.HASH_GROQ }}

      - run: |
          RESULT=$(npx turbo run build --dry=json | jq --raw-output ".tasks[] | select(.taskId | contains(\"@sanity-typed/groq-js#build\")) | .hash")
          echo "HASH_GROQ_JS=$RESULT" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo/${{ env.HASH_GROQ_JS }}*
          key: turbo-cache-${{ env.HASH_GROQ_JS }}

      - run: |
          RESULT=$(npx turbo run build --dry=json | jq --raw-output ".tasks[] | select(.taskId | contains(\"@sanity-typed/client#build\")) | .hash")
          echo "HASH_CLIENT=$RESULT" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo/${{ env.HASH_CLIENT }}*
          key: turbo-cache-${{ env.HASH_CLIENT }}

      - run: |
          RESULT=$(npx turbo run build --dry=json | jq --raw-output ".tasks[] | select(.taskId | contains(\"@sanity-typed/zod#build\")) | .hash")
          echo "HASH_ZOD=$RESULT" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: node_modules/.cache/turbo/${{ env.HASH_ZOD }}*
          key: turbo-cache-${{ env.HASH_ZOD }}

      - env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: npm run build
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v3.8.1
        with:
          node-version-file: "package.json"
          cache: "npm"
      - run: npm ci
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - run: npm run lint
      - run: |
          if [[ $(git status --porcelain) != "" ]]; then
            git --no-pager diff --text HEAD
            exit 1
          fi
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v3.8.1
        with:
          node-version-file: "package.json"
          cache: "npm"
      - run: npm ci

      - run: npm test
